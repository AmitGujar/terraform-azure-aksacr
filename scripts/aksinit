#!/bin/bash
source $HOME/Desktop/terraform-azure-aksacr/scripts/progress_bar.sh || exit 1

source $HOME/Desktop/terraform-azure-aksacr/scripts/alert.sh || exit 1

# cd ..
source $HOME/Desktop/terraform-azure-aksacr/scripts/killaks || exit 1
validate_tfinstall() {
    if ! command -v terraform &>/dev/null; then
        echo "ðŸ¤£ Using Terraform without installing terraform"
        exit 1
    fi
}
validate_tfinstall

terraform_init() {
    echo "Running Terraform init"
    {
        terraform init --upgrade &>/dev/null
    }
}
#terraform_init

terraform_plan() {
    echo "Running Terraform Plan"
    {
        terraform plan -out main.tfplan -var-file personalenv.tfvars
    } >/dev/null &

    progress_bar_movement 1

    echo -e "\nâœ… Terraform plan completed"
}
#terraform_plan

terraform_apply() {
    echo "Running Terraform apply..."
    {
        terraform apply main.tfplan
    } >/dev/null &

    progress_bar_movement 5
    echo -e "\nâœ… Terraform apply complete."
    send_alert "AKS Cluster is created ðŸŽ‰"
    echo "Execute the aks_connect.sh to connect"

}
#terraform_apply



user_choice() {
	read -p "Do you want to apply the config = " choice
	if [ $choice == "y" ]; then
		terraform_init
		terraform_plan
		terraform_apply
	else
		terraform destroy --auto-approve -var-file=personalenv.tfvars
	fi
}
user_choice
